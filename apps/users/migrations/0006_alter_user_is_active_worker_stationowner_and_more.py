# Generated by Django 4.2 on 2025-04-28 15:58

import apps.users.v1.managements
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("stations", "0005_stationbranchservice"),
        ("users", "0005_alter_companybranchmanager_updated_by"),
    ]

    operations = [
        migrations.AlterField(
            model_name="user",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                verbose_name="active",
            ),
        ),
        migrations.CreateModel(
            name="Worker",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "station_branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workers",
                        to="stations.stationbranch",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            bases=("users.user",),
            managers=[
                ("objects", apps.users.v1.managements.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="StationOwner",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owners",
                        to="stations.station",
                    ),
                ),
            ],
            options={
                "verbose_name": "Station Owner",
                "verbose_name_plural": "Station Owners",
            },
            bases=("users.user",),
            managers=[
                ("objects", apps.users.v1.managements.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="StationBranchManager",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "station_branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="managers",
                        to="stations.stationbranch",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="station_branch_managers",
                        to="users.stationowner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Station Branch Manager",
                "verbose_name_plural": "Station Branch Managers",
            },
            bases=("users.user",),
            managers=[
                ("objects", apps.users.v1.managements.CustomUserManager()),
            ],
        ),
    ]
